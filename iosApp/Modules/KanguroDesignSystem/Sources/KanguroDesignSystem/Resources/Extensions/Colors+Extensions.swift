import SwiftUI

public extension Color {

    static let primaryDarkest = Color("PrimaryDarkest", bundle: Bundle.module)
    static let primaryDark = Color("PrimaryDark", bundle: Bundle.module)
    static let primaryMedium = Color("PrimaryMedium", bundle: Bundle.module)
    static let primaryLight = Color("PrimaryLight", bundle: Bundle.module)
    static let primaryLighest = Color("PrimaryLighest", bundle: Bundle.module)
    static let secondaryDarkest = Color("SecondaryDarkest", bundle: Bundle.module)
    static let secondaryDark = Color("SecondaryDark", bundle: Bundle.module)
    static let secondaryMedium = Color("SecondaryMedium", bundle: Bundle.module)
    static let secondaryLight = Color("SecondaryLight", bundle: Bundle.module)
    static let secondaryLightest = Color("SecondaryLightest", bundle: Bundle.module)
    static let tertiaryExtraDark = Color("TertiaryExtraDark", bundle: Bundle.module)
    static let tertiaryDarkest = Color("TertiaryDarkest", bundle: Bundle.module)
    static let tertiaryDark = Color("TertiaryDark", bundle: Bundle.module)
    static let tertiaryMedium = Color("TertiaryMedium", bundle: Bundle.module)
    static let tertiaryLight = Color("TertiaryLight", bundle: Bundle.module)
    static let tertiaryLightest = Color("TertiaryLightest", bundle: Bundle.module)
    static let neutralDarkest = Color("NeutralDarkest", bundle: Bundle.module)
    static let neutralDark = Color("NeutralDark", bundle: Bundle.module)
    static let neutralMedium = Color("NeutralMedium", bundle: Bundle.module)
    static let neutralLight = Color("NeutralLight", bundle: Bundle.module)
    static let neutralLightest = Color("NeutralLightest", bundle: Bundle.module)
    static let neutralBackground = Color("NeutralBackground", bundle: Bundle.module)
    static let positiveDarkest = Color("PositiveDarkest", bundle: Bundle.module)
    static let positiveDark = Color("PositiveDark", bundle: Bundle.module)
    static let positiveMedium = Color("PositiveMedium", bundle: Bundle.module)
    static let positiveLight = Color("PositiveLight", bundle: Bundle.module)
    static let positiveLighest = Color("PositiveLighest", bundle: Bundle.module)
    static let negativeDarkest = Color("NegativeDarkest", bundle: Bundle.module)
    static let negativeDark = Color("NegativeDark", bundle: Bundle.module)
    static let negativeMedium = Color("NegativeMedium", bundle: Bundle.module)
    static let negativeLight = Color("NegativeLight", bundle: Bundle.module)
    static let negativeLightest = Color("NegativeLightest", bundle: Bundle.module)
    static let blueDarkest = Color("BlueDarkest", bundle: Bundle.module)
    static let blueDark = Color("BlueDark", bundle: Bundle.module)
    static let blueMedium = Color("BlueMedium", bundle: Bundle.module)
    static let blueLight = Color("BlueLight", bundle: Bundle.module)
    static let blueLightest = Color("BlueLightest", bundle: Bundle.module)
    static let warningDarkest = Color("WarningDarkest", bundle: Bundle.module)
    static let warningDark = Color("WarningDark", bundle: Bundle.module)
    static let warningMedium = Color("WarningMedium", bundle: Bundle.module)
    static let warningLight = Color("WarningLight", bundle: Bundle.module)
    static let warningLightest = Color("WarningLightest", bundle: Bundle.module)
    static let opaqueNeutralDark = Color("OpaqueNeutralDark", bundle: Bundle.module)
    static let disabledBlue = Color("DisabledBlue", bundle: Bundle.module)
}
