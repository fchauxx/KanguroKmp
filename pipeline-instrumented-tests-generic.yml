parameters:
  - name: Flavor
    displayName: 'Select the flavor (environment)'
    default: dev
    values:
      - dev
      - stage
      - prod

steps:
- task: CacheBeta@0
  displayName: 'Caching System Images for AVD'
  inputs:
    key: 'AVD_IMAGES_PIXEL_28'
    path: '$(ANDROID_HOME)/system-images'
    cacheHitVar: 'AVD_IMAGES_RESTORED'
  continueOnError: true
  condition: succeededOrFailed()
- bash: |
    echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install 'system-images;android-28;google_apis;x86'
  displayName: 'Download and install emulator image'
  condition: ne(variables.AVD_IMAGES_RESTORED, 'true')
- bash: |
    echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd -n android_emulator -k 'system-images;android-28;google_apis;x86' -d 17 --force
    echo "Emulator created successfully $(ANDROID_HOME/emulator/emulator -list-avds), launching it"
    nohup $ANDROID_HOME/emulator/emulator -avd android_emulator -skin 1080x1920 -no-snapshot -no-audio -no-boot-anim -accel auto -gpu auto -qemu -lcd-density 420 > /dev/null 2>&1 &
    $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done'
    $ANDROID_HOME/platform-tools/adb devices
    echo "Emulator started"
  displayName: 'Create and start emulator'
- bash: |
    ./gradlew connected$(FLAVOR)DebugAndroidTest --console=plain  --stacktrace
    ./gradlew --stop
  displayName: 'Run Instrumented Tests'
  continueOnError: true
- task: PublishTestResults@2
  displayName: 'Publish Test Results'
  inputs:
    testResultsFiles: '**/outputs/androidTest-results/**/TEST*.xml'
    failTaskOnFailedTests: true
    testRunTitle: 'Test results'
  condition: succeededOrFailed()